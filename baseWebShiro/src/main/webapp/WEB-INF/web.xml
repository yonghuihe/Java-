<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">

	<!-- 
		<context-param>  
		   <param-name>shiroEnvironmentClass</param-name>  
		   <param-value>org.apache.shiro.web.env.IniWebEnvironment</param-value>  
		</context-param>  
	--> 
	
  	<!-- 
	   	从Shiro 1.2开始引入了Environment/WebEnvironment的概念，即由它们的实现提供相应的SecurityManager及其相应的依赖。
	   	ShiroFilter会自动找到Environment然后获取相应的依赖。
	   	底层:返回反射创建shiroEnvironmentClass对象,调用其init方法.
	   		shiroEnvironmentClass中的init方法创建SecurityManager实例并绑定到当前运行环境
    -->
    
    <!-- 设置配置文件的路径 -->
	<context-param>  
        <param-name>shiroConfigLocations</param-name>  
        <param-value>classpath:shiro.ini</param-value>  
    </context-param>
     
	<listener>  
	   <listener-class>org.apache.shiro.web.env.EnvironmentLoaderListener</listener-class>  
	</listener>

	<!-- 拦截所有的请求 -->  
	<filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.apache.shiro.web.servlet.ShiroFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>
